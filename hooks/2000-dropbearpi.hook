#!/bin/bash

# dropbearpi main hook call
# Place your commands below

# Test for authorized_keys file
if [ ! -f ${_BASEDIR}/config/authorized_keys ]; then
	echo "Dropbear authorized_keys file missing in config folder. Exiting ..."
	exit 1
fi

##########
# Begin Dropbear
# Put authorized keys where they go
echo "Attempting dropbearpi ..."

chroot ${_BUILDDIR}/root apt-get -y install dropbear

# Create the target /etc/dropbear-initramfs/authorized_keys
cat << "EOF" > ${_BUILDDIR}/root/etc/dropbear-initramfs/authorized_keys.tmp
command="export PATH='/sbin:/bin/:/usr/sbin:/usr/bin'; /scripts/local-top/cryptroot && kill -9 `ps | grep -m 1 'cryptroot' | cut -d ' ' -f 3` && exit" 
EOF

# In order to make dropbear unlock on ssh login we need to have the public key
# on the same line as the command
tr -d '\n' < ${_BUILDDIR}/root/etc/dropbear-initramfs/authorized_keys.tmp > ${_BUILDDIR}/root/etc/dropbear-initramfs/authorized_keys
# Clean up temp file
rm -f ${_BUILDDIR}/root/etc/dropbear-initramfs/authorized_keys.tmp

# Now append our key to the authorized_keys file
cat ${_BASEDIR}/config/authorized_keys >> ${_BUILDDIR}/root/etc/dropbear-initramfs/authorized_keys
mkdir -p ${_BUILDDIR}/root/root/.ssh/
cat ${_BASEDIR}/config/authorized_keys > ${_BUILDDIR}/root/root/.ssh/authorized_keys
# Update dropbear for some sleep in initramfs
sed -i 's/run_dropbear &/sleep 5\nrun_dropbear &/g' ${_BUILDDIR}/root/usr/share/initramfs-tools/scripts/init-premount/dropbear
# Change the port that dropbear runs on to make our lives easier
sed -i 's/#DROPBEAR_OPTIONS=/DROPBEAR_OPTIONS="-p 2222"/g' ${_BUILDDIR}/root/etc/dropbear-initramfs/config

echo "... dropbearpi call completed!"

